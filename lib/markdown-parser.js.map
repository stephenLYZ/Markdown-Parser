{"version":3,"file":"markdown-parser.js","sources":["../src/index.js"],"sourcesContent":["// convert markdown to HTML\n\nexport default function convert(md) {\n  // h1, h2, h3, h4, h5, h6\n  md = md.replace(/[\\#]{6}(.+)/g, '<h6>$1</h6>');\n  md = md.replace(/[\\#]{5}(.+)/g, '<h5>$1</h5>');\n  md = md.replace(/[\\#]{4}(.+)/g, '<h4>$1</h4>');\n  md = md.replace(/[\\#]{3}(.+)/g, '<h3>$1</h3>');\n  md = md.replace(/[\\#]{2}(.+)/g, '<h2>$1</h2>');\n  md = md.replace(/[\\#]{1}(.+)/g, '<h1>$1</h1>');  \n\n  // ul && ol\n  md = md.replace(/^\\s*\\n\\-/gm, '<ul>\\n-');\n  md = md.replace(/^(\\-.+)\\s*\\n([^\\-])/gm, '$1\\n</ul>\\n\\n$2');\n  md = md.replace(/^\\-[^\\-](.+)/gm, '<li>$1</li>');\n\n  md = md.replace(/^\\s*\\n\\d\\./gm, '<ol>\\n1.');\n  md = md.replace(/^(\\d\\..+)\\s*\\n([^\\d\\.])/gm, '$1\\n</ol>\\n\\n$2');\n  md = md.replace(/^\\d\\.(.+)/gm, '<li>$1</li>');\n\n  // alt h\n  md = md.replace(/^(.+)\\n\\=+/gm, '<h1>$1</h1>');\n  md = md.replace(/^(.+)\\n\\-+/gm, '<h2>$1</h2>');\n\n  // blockquote\n  md = md.replace(/^\\>(.+)/gm, '<blockquote>$1</blockquote>');\n\n  // imgs \n  md = md.replace(/\\!\\[([^\\]]+)\\]\\(([^\\)]+)\\)/g, '<img src=\"$2\" alt=\"$1\" />');\n\n  // links\n  md = md.replace(/[\\[]{1}([^\\]]+)[\\]]{1}[\\(]{1}([^\\)\\\"]+)(\\\"(.+)\\\")?[\\)]{1}/g, '<a href=\"$2\" title=\"$4\">$1</a>');\n\n  // bold itali linethrough\n  md = md.replace(/[\\*\\_]{2}([^\\*\\_]+)[\\*\\_]{2}/g, '<b>$1</b>');\n  md = md.replace(/[\\*\\_]{1}([^\\*\\_]+)[\\*\\_]{1}/g, '<i>$1</i>');\n  md = md.replace(/[\\~]{2}([^\\~]+)[\\~]{2}/g, '<del>$1</del>');\n\n  //pre\n  md = md.replace(/^\\s*\\n\\`\\`\\`(([^\\s]+))?/gm, '<pre class=\"$2\">');\n  md = md.replace(/^\\`\\`\\`\\s*\\n/gm, '</pre>\\n\\n');\n  \n  //code\n  md = md.replace(/[\\`]{1}([^\\`]+)[\\`]{1}/g, '<code>$1</code>');\n\n  //p\n  md = md.replace(/^\\s*(\\n)?(.+)/gm, function(m){\n    return  /\\<(\\/)?(h\\d|ul|ol|li|blockquote|pre|img)/.test(m) ? m : '<p>'+m+'</p>';\n  });\n  \n  //strip p from pre\n  md = md.replace(/(\\<pre.+\\>)\\s*\\n\\<p\\>(.+)\\<\\/p\\>/gm, '$1$2');\n\n  return md;\n}\n"],"names":["md","replace","m","test"],"mappings":"qCAEA,SAAgCA,GAmD9B,OAjDAA,EAAKA,EAAGC,QAAQ,eAAgB,eAChCD,EAAKA,EAAGC,QAAQ,eAAgB,eAChCD,EAAKA,EAAGC,QAAQ,eAAgB,eAChCD,EAAKA,EAAGC,QAAQ,eAAgB,eAChCD,EAAKA,EAAGC,QAAQ,eAAgB,eAChCD,EAAKA,EAAGC,QAAQ,eAAgB,eAGhCD,EAAKA,EAAGC,QAAQ,aAAc,WAC9BD,EAAKA,EAAGC,QAAQ,wBAAyB,mBACzCD,EAAKA,EAAGC,QAAQ,iBAAkB,eAElCD,EAAKA,EAAGC,QAAQ,eAAgB,YAChCD,EAAKA,EAAGC,QAAQ,4BAA6B,mBAC7CD,EAAKA,EAAGC,QAAQ,cAAe,eAG/BD,EAAKA,EAAGC,QAAQ,eAAgB,eAChCD,EAAKA,EAAGC,QAAQ,eAAgB,eAGhCD,EAAKA,EAAGC,QAAQ,YAAa,+BAG7BD,EAAKA,EAAGC,QAAQ,8BAA+B,6BAG/CD,EAAKA,EAAGC,QAAQ,6DAA8D,kCAG9ED,EAAKA,EAAGC,QAAQ,gCAAiC,aACjDD,EAAKA,EAAGC,QAAQ,gCAAiC,aACjDD,EAAKA,EAAGC,QAAQ,0BAA2B,iBAG3CD,EAAKA,EAAGC,QAAQ,4BAA6B,oBAC7CD,EAAKA,EAAGC,QAAQ,iBAAkB,cAGlCD,EAAKA,EAAGC,QAAQ,0BAA2B,mBAG3CD,EAAKA,EAAGC,QAAQ,kBAAmB,SAASC,GAC1C,MAAQ,2CAA2CC,KAAKD,GAAKA,EAAI,MAAMA,EAAE,SAI3EF,EAAKA,EAAGC,QAAQ,qCAAsC"}